/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.TrabajarCliente;
import Controlador.TrabajarCuota;
import Controlador.TrabajarGasto;
import Modelo.Cliente;
import Modelo.Cuota;
import Modelo.DeudaMes;
import Modelo.Gasto;
import Modelo.GastoMostrar;
import java.awt.List;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Fernando
 */
public class IngresoGastos extends javax.swing.JInternalFrame {

    /**
     * Creates new form IngresoGastos
     */
    DefaultTableModel model;
    DefaultTableModel model2;
    ArrayList<GastoMostrar> lista = new ArrayList<>();
    ArrayList<DeudaMes> listadeuda = new ArrayList<>();
    //String fechax = fecha();

    public IngresoGastos() {
        initComponents();
        cargarcombo();
        Calendar c2 = new GregorianCalendar();
        jDateChooser1.setCalendar(c2);
        jDateChooser2.setCalendar(c2);
        jDateChooser2.setEnabled(false);
        model = new DefaultTableModel();
        jTable1.setModel(model);
        model2 = new DefaultTableModel();
        jTable2.setModel(model2);
        cabeceras();
        mostrargastos();
        deudames();
        //commit
        //((BasicInternalFrameUI) this.getUI()).setNorthPane(null);//Quita los titulos del JinternalFrame
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setTitle("Agregar gastos");

        jLabel1.setText("Monto");

        jLabel2.setText("Fecha");

        jLabel3.setText("Cuotas");

        jTextField1.setNextFocusableComponent(jTextField2);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Monto", "Fecha", "Cuotas", "Comentarios", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setNextFocusableComponent(jButton1);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel4.setText("Valor Cuota");

        jLabel5.setText("Asignar a:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pago del mes"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Titular", "Monto"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 217, Short.MAX_VALUE))
        );

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Fecha");

        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(1, 1, 1)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        agregargasto();
        deudames();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void agregargasto() {
        Double monto;
        int cuotas;
        int estado = 1;
        Double montocuota;
        String fecha;
        int dia;
        int mes;
        int anho;
        int idcliente = 0;
        Cliente cliente = new Cliente();
        Gasto gasto = new Gasto();
        Cuota cuota = new Cuota();
        if (jTextField1.getText().equals("") || jTextField2.getText().equals("") || jTextArea1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No dejes campos vacíos", "Error", JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
        } else {
            fecha = fecha();
            dia = dia();
            mes = mes();
            anho = anho();
            montocuota = Double.parseDouble(jTextField3.getText());
            monto = Double.parseDouble(jTextField1.getText());
            cuotas = Integer.parseInt(jTextField2.getText());
            String comentario = jTextArea1.getText();
            cliente = TrabajarCliente.BuscarClientepornombre(jComboBox1.getSelectedItem().toString(), null);
            if (cliente == null) {
                JOptionPane.showMessageDialog(null, "Seleccion a quién le vas a asignar este gasto", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                idcliente = cliente.getIdcliente();
                gasto.setMonto(monto);
                gasto.setCuotas(cuotas);
                gasto.setFecha(fecha);
                gasto.setComentario(comentario);
                gasto.setEstado(estado);
                gasto.setMontocuota(montocuota);
                gasto.setIdcliente(idcliente);//
                int respuesta = JOptionPane.showConfirmDialog(null, " ¿Segura que deseas guardar estos datos?"
                        + "\n- Monto: " + monto + ""
                        + "\n- Cuotas: " + cuotas + ""
                        + "\n- Fecha: " + fecha + ""
                        + "\n- Monto Cuota: " + montocuota + ""
                        + "\n- Asignado a: " + cliente.getNombre() + "");
                if (JOptionPane.OK_OPTION == respuesta) {
                    TrabajarGasto.InsertarGasto(gasto);
                    int max = TrabajarGasto.MostrarUltimoGAsto();
                    for (int i = 0; i < cuotas; i++) {
                        if (dia < 25) {
                            if (i > 0) {
                                mes = mes + 1;
                                if (mes > 12) {
                                    mes = 1;
                                    anho = anho + 1;
                                }
                            }
                            int diamenor;
                            diamenor = 28;
                            fecha = anho + "-" + mes + "-" + diamenor;
                            cuota.setMonto(montocuota);
                            cuota.setEstado(1);
                            cuota.setFecha(fecha);
                            cuota.setIdgasto(max);
                            cuota.setDetalle(comentario);
                            cuota.setCantidadcuotas(cuotas);
                            cuota.setNumerocuotas(i + 1);
                            TrabajarCuota.InsertarCuota(cuota);
                        }
                        if (dia >= 25) {
                            mes = mes + 1;
                            if (mes > 12) {
                                mes = 1;
                                anho = anho + 1;
                            }
                            int diamayor;
                            diamayor = 28;
                            fecha = anho + "-" + mes + "-" + diamayor;
                            cuota.setMonto(montocuota);
                            cuota.setEstado(1);
                            cuota.setFecha(fecha);
                            cuota.setIdgasto(max);
                            cuota.setDetalle(comentario);
                            cuota.setCantidadcuotas(cuotas);
                            cuota.setNumerocuotas(i + 1);
                            TrabajarCuota.InsertarCuota(cuota);
                        }
                    }
                    limpiarcajas();
                    mostrargastos();
                } else {
                    JOptionPane.showMessageDialog(null, "Verfica los datos");
                }//

            }

        }
    }

    private String fecha() {
        String fecha;
        int dia, mes, anho, id = 0;
        anho = jDateChooser1.getCalendar().get(Calendar.YEAR);
        mes = jDateChooser1.getCalendar().get(Calendar.MONTH) + 1;
        dia = jDateChooser1.getCalendar().get(Calendar.DAY_OF_MONTH);
        fecha = anho + "-" + mes + "-" + dia;
        return fecha;
    }

    private int dia() {
        String fecha;
        int dia;
        dia = jDateChooser1.getCalendar().get(Calendar.DAY_OF_MONTH);
        return dia;
    }

    private int mes() {
        int mes;
        mes = jDateChooser1.getCalendar().get(Calendar.MONTH) + 1;
        return mes;
    }

    private int mesnuevo() {
        int mes;
        mes = jDateChooser2.getCalendar().get(Calendar.MONTH) + 1;
        return mes;
    }

    private int anho() {
        int anho;
        anho = jDateChooser1.getCalendar().get(Calendar.YEAR);
        return anho;
    }

    private void cabeceras() {
        model.addColumn("Monto");
        model.addColumn("Valor Cuota");
        model.addColumn("Fecha Gasto");
        model.addColumn("Pertenece");
        model.addColumn("Cuotas");
        model.addColumn("Comentarios");
        model.addColumn("Estado");
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(20);
        columnModel.getColumn(2).setPreferredWidth(40);
        columnModel.getColumn(3).setPreferredWidth(60);
        columnModel.getColumn(4).setPreferredWidth(10);
        columnModel.getColumn(5).setPreferredWidth(250);
        columnModel.getColumn(6).setPreferredWidth(40);
    }

    private void mostrargastos() {
        model.setRowCount(0);
        //model.setColumnCount(0);
        lista = TrabajarGasto.MostrarGastosPendientes();
        int i = lista.size();
        Object[] p = new Object[i];
        if (i != 0) {
            for (int j = 0; j < i; j++) {
                GastoMostrar resumen = lista.get(j);
                model.addRow(p);
                model.setValueAt(resumen.getMonto(), j, 0);
                model.setValueAt(resumen.getMontocuota(), j, 1);
                model.setValueAt(resumen.getFecha(), j, 2);
                model.setValueAt(resumen.getCliente(), j, 3);
                model.setValueAt(resumen.getCuotas(), j, 4);
                model.setValueAt(resumen.getComentario(), j, 5);
                model.setValueAt(resumen.getEstado(), j, 6);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se encontraron datos", "Error al mostrar", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpiarcajas() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextArea1.setText("");
    }

    private void cargarcombo() {
        ArrayList<Cliente> listacliente = new ArrayList<>();
        listacliente = TrabajarCliente.MostrarCliente();
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Seleccionar");
        for (Cliente cliente : listacliente) {
            jComboBox1.addItem(cliente.getNombre());
        }
    }

    private void deudames() {
        model2.setColumnCount(0);
        model2.setRowCount(0);
        model2.addColumn("Nombre");
        model2.addColumn("Total a Pagar");
        String fecha, fechacalcular = null;
        int dia, mes, anho;
        fecha = fecha();
        mes = mesnuevo();
        if (mes == 1) {
            jLabel7.setText("Enero");
            fechacalcular = "2018-01-28";
        }
        if (mes == 2) {
            jLabel7.setText("Febrero");
            fechacalcular = "2018-02-28";
        }
        if (mes == 3) {
            jLabel7.setText("Marzo");
            fechacalcular = "2018-03-28";
        }
        if (mes == 4) {
            jLabel7.setText("Abril");
            fechacalcular = "2018-04-28";
        }
        if (mes == 5) {
            jLabel7.setText("Mayo");
            fechacalcular = "2018-05-28";
        }
        if (mes == 6) {
            jLabel7.setText("Junio");
            fechacalcular = "2018-06-28";
        }
        if (mes == 7) {
            jLabel7.setText("Julio");
            fechacalcular = "2018-07-28";
        }
        if (mes == 8) {
            jLabel7.setText("Agosto");
            fechacalcular = "2018-08-28";
        }
        if (mes == 9) {
            jLabel7.setText("Setiembre");
            fechacalcular = "2018-09-28";
        }
        if (mes == 10) {
            jLabel7.setText("Octubre");
            fechacalcular = "2018-10-28";
        }
        if (mes == 11) {
            jLabel7.setText("Noviembre");
            fechacalcular = "2018-11-28";
        }
        if (mes == 12) {
            jLabel7.setText("Diciembre");
            fechacalcular = "2018-12-28";
        }

        listadeuda = TrabajarGasto.MostrarDeudaMes(fechacalcular);
        mostrardeudames();
    }

    private void mostrardeudames() {
        model2.setRowCount(0);
        //model2.setColumnCount(0);
        int i = listadeuda.size();
        Object[] p = new Object[i];
        if (i != 0) {
            for (int j = 0; j < i; j++) {
                DeudaMes resumen = listadeuda.get(j);
                model2.addRow(p);
                model2.setValueAt(resumen.getNombre(), j, 0);
                model2.setValueAt(resumen.getTotal(), j, 1);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se encontraron datos", "Error al mostrar", JOptionPane.ERROR_MESSAGE);
        }
    }

    //private void actualizarpendientes(){}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
